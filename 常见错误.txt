1:在创建新的项目版面时，要将上一个版本的代码复制到当前版本项目
  如果将上个版本中src/main/java目录粘贴到新版本中时，发现新版本的src/main/java中的源代码
  包不是com.webserver.xxx开始的，而是java.com.webserver.xxx开始的，说明目录结构复制错误
  运行代码时idea会报安全异常!
  解决，将复制的包删除，从新将上个版本的java目录覆盖当前项目的src/main目录中即可

2:在src/main/java下不能新建包和类
  原因:java目录应该不是蓝色图标了(不是源码目录)，因此idea不允许在这里创建包和类
  解决:点击idea左上角的File->Project Structure
       弹出框中，左侧的Project Setting->Modules
       中间的选择当前项目
       右侧框中分别选择sources->在下方选择src/main中的java目录，再在两者之间点击源码图标
       即:Mark as->Sources

3:代码修改完毕后，确定代码没有错误，写的完全正确，但是运行起来就是没有执行这些代码，打桩也
  没有输出
  原因:很可能是运行的项目版本不对，或者代码改的版本不对(本来应当改V3的类，结果改成V2的类了)
  解决:运行的版本不对时，先将服务端关闭，重新打开要执行的版本的WebServer重新运行这个类。

4:浏览器请求服务端后，打桩输出的请求内容是乱码
  原因:浏览器地址栏没有输入http://，此时浏览器可能使用了https://这种加密的http协议。导致
      服务端读取该请求时内容是乱码
  解决:在浏览器输入路径时，手动输入http://这部分。如:http://localhost:8088/....

5:在前几个版本测试时，浏览器请求后，服务端输出只有一个客户端连接,而不输出发送过来的请求内容
  此时服务端启动的版本没有错误，那么很可能是由于浏览器发送了空请求导致的。这个问题后面的版本
  会解决的。
  解决:换一个别的浏览器试试，或者将浏览器清空缓存(自行百度操作流程)，然后重启浏览器后再连接
       测试

以下是V6版本后常见错误
6:当浏览器请求一个页面，服务端发送响应后，浏览器看到的是该页面的源代码，这通常是发送
  的响应出现了问题。
  6.1:有可能是响应头Content-Type或者对应的值拼写错误。
  6.2:少发送了CRLF。
  6.3:响应头少发送了。

7:浏览器请求页面后，显示要求下载。这通常是服务端发送Content-Type拼写有错误(名字或值)。


8:服务端运行后，在响应客户端时出现:
java.net.SocketException: Software caused connection abort: socket write error
如果是在发送状态行的时候出现了该错误，则很可能是因为解析请求时没有完全读取客户端发送的请求导致的。
需要检查HttpRequest请求解析时是否将请求行，消息头，消息正文(如果有正文)都全部读取。

如果发生在发送响应正文是出现了该错误，则很可能是由于发送的响应头Content-Length指定的长度不对，或者
少发送了CRLF等导致。也可能是发送响应正文时候的循环读取发送逻辑有错误。


9:服务端报错:
java.io.FileNotFoundException: ./webapps/favicon.ico(系统找不到指定的文件)
这是浏览器行为，获取一个用于在浏览器标题位置展示的图标。
这个没有没关系，不影响应用。也可以自行找一个.ico结尾的图标文件，放在webapps目录下即可。













